from binance.um_futures import UMFutures
import time
import telebot

apikey = 'vAdMNaJqAiXxPK778kxj3QNXleIH3s05Mb67QB57nnxydCa5vF7ZhNHnQBW8CqMe'
seckey = 'PtjfHX5K9pJEEUW2PUaSHaXJUn5PFFczGc0FxmbfM1ea7MOeIWxDB3VirHqt9vFe'
bot = telebot.TeleBot(token='7023419101:AAHx0BbL_Bmxd8k_xac1TDFswJAZrYcLZQQ')
procent_buy = 1
client = UMFutures(key=apikey, secret=seckey)

list_symbols = [
    'RSRUSDT', 'STGUSDT', 'ZENUSDT', 'ALICEUSDT', 'ARUSDT', 'COMPUSDT', 'ARKUSDT', 
    'AGIXUSDT', 'DODOXUSDT', '1INCHUSDT', 'BLUEBIRDUSDT', 'HOTUSDT', 'AMBUSDT', 
    'STXUSDT', 'SUIUSDT', 'NTRNUSDT', 'CTKUSDT', 'ARBUSDT', 'POWRUSDT', 'AAVEUSDT', 
    'ETHUSDC', 'SLPUSDT', 'IMXUSDT', 'SNTUSDT', 'LINAUSDT', 'ALTUSDT', 'BICOUSDT', 
    'DOTUSDT', 'OXTUSDT', 'REEFUSDT', 'ALGOUSDT', 'STMXUSDT', 'BONDUSDT', 'USTCUSDT', 
    'XLMUSDT', 'MAGICUSDT', 'BNBUSDT', 'MTLUSDT', 'C98USDT', 'DYMUSDT', 'ONDOUSDT', 
    '1000PEPEUSDT', 'XRPUSDC', 'LOOMUSDT', 'RONINUSDT', 'MATICUSDT', 'SSVUSDT', 
    'POLYXUSDT', 'FLMUSDT', 'LEVERUSDT', 'BSVUSDT', 'CVXUSDT', 'LTCUSDT', 'TWTUSDT', 
    '1000FLOKIUSDT', 'BLURUSDT', '1000SATSUSDT', 'ZILUSDT', 'AGLDUSDT', 'APEUSDT', 
    'PENDLEUSDT', '1000SHIBUSDT', 'NFPUSDT', 'SOLUSDC', 'SANDUSDT', 'AUDIOUSDT', 
    'MDTUSDT', 'ICXUSDT', 'PEOPLEUSDT', 'TOKENUSDT', 'ETHUSDT_240329', 'CFXUSDT', 
    'GLMRUSDT', 'MINAUSDT', 'WAVESUSDT', 'YFIUSDT', '1000LUNCUSDT', 'KSMUSDT', 
    'ILVUSDT', 'MKRUSDT', 'BALUSDT', 'CTSIUSDT', 'COTIUSDT', 'XTZUSDT', 'FRONTUSDT', 
    'LSKUSDT', 'RUNEUSDT', 'BNTUSDT', 'WAXPUSDT', 'AEVOUSDT', 'DUSKUSDT', 'QTUMUSDT', 
    'API3USDT', 'LINKUSDT', 'MANTAUSDT', 'ROSEUSDT', 'DEFIUSDT', 'KLAYUSDT', 
    'IOTXUSDT', 'DENTUSDT', 'ORBSUSDT', 'BNBUSDC', 'PHBUSDT', 'TLMUSDT', 'CELOUSDT', 
    'HBARUSDT', 'RADUSDT', 'XMRUSDT', 'CHRUSDT', 'ZETAUSDT', 'BIGTIMEUSDT', 'ENJUSDT', 
    'SUPERUSDT', 'EGLDUSDT', '1000BONKUSDT', 'FLOWUSDT', 'YGGUSDT', 'JUPUSDT', 
    'BEAMXUSDT', 'KEYUSDT', 'IOTAUSDT', 'ADAUSDT', 'TRBUSDT', 'OCEANUSDT', 'ENSUSDT', 
    'TRXUSDT', 'BELUSDT', 'LRCUSDT', 'AUCTIONUSDT', 'CYBERUSDT', 'APTUSDT', 'NMRUSDT', 
    'SEIUSDT', 'TUSDT', 'HFTUSDT', 'PYTHUSDT', 'TOMOUSDT', 'ORDIUSDT', 'HIGHUSDT', 
    'JASMYUSDT', 'ZRXUSDT', 'LUNA2USDT', 'IDUSDT', '1000XECUSDT', 'XEMUSDT', 
    'COCOSUSDT', 'AVAXUSDT', 'DARUSDT', 'ONEUSDT', 'SOLUSDT', 'ATAUSDT', 'GTCUSDT', 
    'WLDUSDT', 'GALAUSDT', 'CAKEUSDT', 'WIFUSDT', 'BANDUSDT', 'ARKMUSDT', 'ALPHAUSDT', 
    'FTMUSDT', 'BAKEUSDT', 'AIUSDT', 'SPELLUSDT', 'LITUSDT', 'RLCUSDT', 'NKNUSDT', 
    'HOOKUSDT', 'BNXUSDT', 'ONGUSDT', 'RENUSDT', 'ETHBTC', 'ZECUSDT', 'XRPUSDT', 
    'SFPUSDT', 'USDCUSDT', 'IDEXUSDT', 'MBLUSDT', 'IOSTUSDT', 'ASTRUSDT', 'ENAUSDT', 
    'ATOMUSDT', 'WOOUSDT', 'LDOUSDT', 'FXSUSDT', 'BTCUSDT_240628', 'KAVAUSDT', 
    'ACHUSDT', 'LPTUSDT', 'SNXUSDT', 'FILUSDT', 'ANKRUSDT', 'MEMEUSDT', 'DGBUSDT', 
    'BATUSDT', 'MOVRUSDT', 'EDUUSDT', 'BTCUSDC', 'OGNUSDT', 'DASHUSDT', 'ETHUSDT_240628', 
    'RDNTUSDT', 'COMBOUSDT', 'ETHUSDT', 'ARPAUSDT', 'CRVUSDT', 'DOGEUSDC', 'MAVUSDT', 
    'RNDRUSDT', 'ACEUSDT', 'NEARUSDT', 'GASUSDT', 'QNTUSDT', 'DOGEUSDT', 'GALUSDT', 
    'STPTUSDT', 'XAIUSDT', 'MASKUSDT', 'PERPUSDT', 'GMXUSDT', 'LQTYUSDT', '1000RATSUSDT', 
    'BADGERUSDT', 'KNCUSDT', 'ANTUSDT', 'EOSUSDT', 'TIAUSDT', 'CELRUSDT', 'OPUSDT', 
    'XVSUSDT', 'ETCUSDT', 'JTOUSDT', 'VETUSDT', 'MANAUSDT', 'XVGUSDT', 'ICPUSDT', 
    'BTCUSDT_240329', 'UNFIUSDT', 'RIFUSDT', 'KASUSDT', 'SKLUSDT', 'FETUSDT', 
    'ETHWUSDT', 'OMGUSDT', 'CHZUSDT', 'SUSHIUSDT', 'BLZUSDT', 'SXPUSDT', 'NEOUSDT', 
    'STRAXUSDT', 'BCHUSDT', 'CKBUSDT', 'STEEMUSDT', 'GRTUSDT', 'RVNUSDT', 'HIFIUSDT', 
    'INJUSDT', 'UNIUSDT', 'TRUUSDT', 'THETAUSDT', 'UMAUSDT', 'ONTUSDT', 'GMTUSDT', 
    'AXSUSDT', 'BTCUSDT', 'BTCDOMUSDT', 'JOEUSDT', 'DYDXUSDT', 'STORJUSDT', 'FOOTBALLUSDT'
]

while True:
    for symbol in list_symbols:
        info_klines = client.klines(symbol=symbol, interval='15m', limit=2)
        prev_candle = info_klines[0]

        open_prevCandle = float(prev_candle[1])
        close_prevCandle = float(prev_candle[4])
        volume_prevCandle = float(prev_candle[5])
        high_prevCandle = float(prev_candle[2])
        pcp_buy = ((close_prevCandle - open_prevCandle) / open_prevCandle) * 100
        pcp_buy = round(pcp_buy, 2)
        
       
        if pcp_buy >= procent_buy and close_prevCandle == high_prevCandle:
            bot.send_message(chat_id='812257655', text=symbol)
    time.sleep(700)            